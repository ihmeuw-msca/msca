Search.setIndex({"docnames": ["api_reference/index", "api_reference/msca.c2fun", "api_reference/msca.linalg", "api_reference/msca.optim.prox", "api_reference/msca.optim.solver", "index", "installation"], "filenames": ["api_reference/index.rst", "api_reference/msca.c2fun.rst", "api_reference/msca.linalg.rst", "api_reference/msca.optim.prox.rst", "api_reference/msca.optim.solver.rst", "index.rst", "installation.rst"], "titles": ["API Reference", "msca.c2fun", "msca.linalg", "msca.optim.prox", "msca.optim.solver", "This is a msca package", "Installing msca"], "terms": {"msca": 0, "c2fun": [0, 5], "ident": [0, 1], "exp": [0, 1], "log": [0, 1, 4], "expit": [0, 1], "logit": [0, 1], "logerfc": [0, 1], "c2fun_dict": [0, 1], "linalg": [0, 5], "matrix": [0, 4], "optim": [0, 5], "prox": [0, 5], "proj_capped_simplex": [0, 3], "solver": [0, 5], "ipresult": [0, 4], "ipsolv": [0, 4], "ntresult": [0, 4], "ntsolver": [0, 4], "continu": 1, "twice": 1, "differenti": 1, "function": [1, 4], "The": [1, 2, 3, 4, 6], "instanc": [1, 2], "thi": [1, 4], "class": [1, 2, 4], "provid": [1, 3, 5], "deriv": 1, "second": 1, "It": [1, 2], "also": 1, "contain": [1, 2], "invers": 1, "exampl": 1, "from": 1, "import": 1, "x": [1, 2, 3, 4], "1": [1, 3, 4], "2": [1, 3], "3": [1, 6], "exponenti": 1, "y": [1, 3], "dy": 1, "order": 1, "d2y": 1, "which": 1, "i": [1, 2, 3, 4, 6], "z": [1, 3], "inv": 1, "all": [1, 2, 3], "concret": 1, "list": [1, 4], "below": [1, 4], "alreadi": [1, 2], "have": 1, "modul": 1, "level": 1, "creat": 1, "we": 1, "suggest": 1, "user": 1, "directli": 1, "us": [1, 3], "rather": 1, "than": [1, 3], "new": 1, "you": [1, 6], "can": [1, 3, 6], "access": 1, "model": 1, "variabl": [1, 3, 4], "main": 1, "sourc": [1, 2, 3, 4], "base": [1, 2, 4], "abc": [1, 2], "abstract": [1, 2], "defin": [1, 3], "interfac": [1, 2], "To": [1, 5, 6], "inherit": 1, "much": 1, "fun": [1, 4], "dfun": 1, "d2fun": 1, "And": [1, 3, 5], "implement": 1, "pleas": [1, 5], "overrid": 1, "otherwis": 1, "rais": [1, 2, 3], "notimplementederror": 1, "callabl": [1, 4], "signatur": 1, "__call__": 1, "properti": [1, 2], "static": 1, "paramet": [1, 2, 3, 4], "ndarrai": [1, 2, 3, 4], "independ": 1, "return": [1, 2, 3, 4], "type": [1, 2, 3, 4], "0": [1, 3, 4], "int": [1, 4], "valu": [1, 2, 4], "ha": 1, "choos": 1, "default": [1, 3, 4], "valueerror": [1, 2, 3], "when": [1, 2, 3, 4], "itself": 1, "f": 1, "frac": [1, 3], "form": 1, "le": [1, 3], "2x": 1, "left": [1, 3], "right": [1, 2, 3], "special": 1, "appear": 1, "stochast": 1, "frontier": 1, "analysi": 1, "erfc": 1, "written": [1, 6], "mathrm": [1, 3], "sqrt": 1, "pi": 1, "int_0": 1, "t": [1, 2, 3], "dt": 1, "converg": [1, 4], "zero": 1, "veri": 1, "fast": 1, "increas": 1, "caus": 1, "numer": 1, "issu": 1, "comput": 1, "asymptot": 1, "approxim": 1, "avoid": 1, "problem": [1, 3], "implemenet": 1, "whenev": 1, "ge": 1, "25": 1, "approx": 1, "4": 1, "dict": [1, 2, 4], "str": [1, 2, 4], "A": [1, 2, 4], "dictionari": [1, 2], "map": [1, 4], "name": 1, "through": 1, "wrapper": 2, "unifi": 2, "differ": [2, 4], "arrai": 2, "number": [2, 4], "dimens": 2, "two": 2, "scale_row": 2, "scale": 2, "row": 2, "arraylik": 2, "vector": [2, 3], "size": [2, 4], "should": 2, "align": 2, "scale_col": 2, "column": 2, "solv": [2, 3, 4], "linear": [2, 4], "system": [2, 4], "repres": 2, "hand": 2, "side": 2, "equat": [2, 3], "solut": [2, 3, 4], "to_numpi": 2, "convert": 2, "numpi": [2, 4], "represent": 2, "numpymatrix": 2, "arg": 2, "kwarg": 2, "dot": 2, "product": 2, "oper": 2, "give": 2, "result": [2, 4], "If": [2, 3], "dimension": 2, "an": [2, 3], "method": [2, 4], "csrmatrix": 2, "csr_matrix": 2, "cscmatrix": 2, "transpos": 2, "csc_matrix": 2, "matrix_class": 2, "tupl": 2, "collect": 2, "matrix_class_dict": 2, "organ": 2, "kei": 2, "parent": 2, "asmatrix": 2, "data": 2, "its": 2, "ani": [2, 4], "given": [2, 3], "compat": 2, "typeerror": 2, "": [3, 4], "lb": 3, "ub": 3, "project": 3, "onto": 3, "cap": 3, "simplex": 3, "triangl": 3, "l": 3, "u": 3, "mathbb": 3, "r": 3, "n": 3, "sum_": 3, "x_i": 3, "frame": 3, "min_": 3, "quad": 3, "found": 3, "follow": 3, "mathbf": 3, "top": 3, "max": 3, "min": 3, "need": 3, "float": [3, 4], "target": 3, "sum": 3, "lower": [3, 4], "bound": [3, 4], "scalar": 3, "coordin": 3, "satisfi": 3, "constraint": [3, 4], "higher": 3, "upper": 3, "success": 4, "grad": 4, "hess": 4, "niter": 4, "maxcv": 4, "object": 4, "interior": 4, "point": 4, "bool": 4, "whether": 4, "exit": 4, "successfulli": 4, "gradient": 4, "hessian": 4, "iter": 4, "maximum": 4, "violat": 4, "cmat": 4, "cvec": 4, "get_kkt": 4, "p": 4, "m": 4, "get": [4, 5], "kkt": 4, "includ": 4, "v": 4, "where": 4, "slack": 4, "dual": 4, "barrier": 4, "three": 4, "compon": 4, "minim": 4, "x0": 4, "xtol": 4, "1e": 4, "08": 4, "gtol": 4, "mtol": 4, "06": 4, "max_it": 4, "100": 4, "m_init": 4, "m_freq": 4, "5": 4, "m_scale": 4, "a_init": 4, "a_const": 4, "01": 4, "a_scal": 4, "9": 4, "a_lb": 4, "001": 4, "verbos": 4, "fals": 4, "mat_solve_method": 4, "mat_solve_opt": 4, "none": 4, "over": 4, "initi": 4, "guess": 4, "toler": 4, "8": 4, "6": 4, "maximm": 4, "bairrier": 4, "updat": 4, "frequenc": 4, "shrinkag": 4, "factor": 4, "step": 4, "constant": 4, "line": 4, "search": 4, "condit": 4, "larger": 4, "harder": 4, "termin": 4, "indic": 4, "print": 4, "out": 4, "histori": 4, "option": 4, "newton": 4, "dtype": 4, "_type": 4, "_array_lik": 4, "_scalartype_co": 4, "welcom": 5, "document": 5, "start": 5, "check": 5, "section": 5, "full": 5, "instal": 5, "python": 5, "version": 5, "For": 5, "develop": 5, "api": 5, "packag": 6, "requir": 6, "10": 6, "later": 6, "regmod": 6, "distribut": 6, "pypi": 6, "pip": 6, "clone": 6, "repositori": 6, "mode": 6, "git": 6, "http": 6, "github": 6, "com": 6, "ihmeuw": 6, "cd": 6, "e": 6, "test": 6, "doc": 6}, "objects": {"msca.c2fun": [[1, 0, 0, "-", "main"]], "msca.c2fun.main": [[1, 1, 1, "", "C2Fun"], [1, 1, 1, "", "Exp"], [1, 1, 1, "", "Expit"], [1, 1, 1, "", "Identity"], [1, 1, 1, "", "Log"], [1, 1, 1, "", "Logerfc"], [1, 1, 1, "", "Logit"], [1, 4, 1, "", "c2fun_dict"]], "msca.c2fun.main.C2Fun": [[1, 2, 1, "", "__call__"], [1, 2, 1, "", "d2fun"], [1, 2, 1, "", "dfun"], [1, 2, 1, "", "fun"], [1, 3, 1, "", "inv"]], "msca.c2fun.main.Exp": [[1, 2, 1, "", "d2fun"], [1, 2, 1, "", "dfun"], [1, 2, 1, "", "fun"], [1, 3, 1, "", "inv"]], "msca.c2fun.main.Expit": [[1, 2, 1, "", "d2fun"], [1, 2, 1, "", "dfun"], [1, 2, 1, "", "fun"], [1, 3, 1, "", "inv"]], "msca.c2fun.main.Identity": [[1, 2, 1, "", "d2fun"], [1, 2, 1, "", "dfun"], [1, 2, 1, "", "fun"], [1, 3, 1, "", "inv"]], "msca.c2fun.main.Log": [[1, 2, 1, "", "d2fun"], [1, 2, 1, "", "dfun"], [1, 2, 1, "", "fun"], [1, 3, 1, "", "inv"]], "msca.c2fun.main.Logerfc": [[1, 2, 1, "", "d2fun"], [1, 2, 1, "", "dfun"], [1, 2, 1, "", "fun"], [1, 3, 1, "", "inv"]], "msca.c2fun.main.Logit": [[1, 2, 1, "", "d2fun"], [1, 2, 1, "", "dfun"], [1, 2, 1, "", "fun"], [1, 3, 1, "", "inv"]], "msca.linalg": [[2, 0, 0, "-", "matrix"]], "msca.linalg.matrix": [[2, 1, 1, "", "CSCMatrix"], [2, 1, 1, "", "CSRMatrix"], [2, 1, 1, "", "Matrix"], [2, 1, 1, "", "NumpyMatrix"], [2, 5, 1, "", "asmatrix"], [2, 4, 1, "", "matrix_class_dict"], [2, 4, 1, "", "matrix_classes"]], "msca.linalg.matrix.CSCMatrix": [[2, 3, 1, "", "T"], [2, 2, 1, "", "dot"], [2, 2, 1, "", "scale_cols"], [2, 2, 1, "", "scale_rows"], [2, 2, 1, "", "solve"], [2, 2, 1, "", "to_numpy"]], "msca.linalg.matrix.CSRMatrix": [[2, 3, 1, "", "T"], [2, 2, 1, "", "dot"], [2, 2, 1, "", "scale_cols"], [2, 2, 1, "", "scale_rows"], [2, 2, 1, "", "solve"], [2, 2, 1, "", "to_numpy"]], "msca.linalg.matrix.Matrix": [[2, 2, 1, "", "scale_cols"], [2, 2, 1, "", "scale_rows"], [2, 2, 1, "", "solve"], [2, 2, 1, "", "to_numpy"]], "msca.linalg.matrix.NumpyMatrix": [[2, 2, 1, "", "dot"], [2, 2, 1, "", "scale_cols"], [2, 2, 1, "", "scale_rows"], [2, 2, 1, "", "solve"], [2, 2, 1, "", "to_numpy"]], "msca.optim.prox": [[3, 5, 1, "", "proj_capped_simplex"]], "msca.optim.solver": [[4, 0, 0, "-", "ipsolver"], [4, 0, 0, "-", "ntsolver"]], "msca.optim.solver.ipsolver": [[4, 1, 1, "", "IPResult"], [4, 1, 1, "", "IPSolver"]], "msca.optim.solver.ipsolver.IPResult": [[4, 6, 1, "", "fun"], [4, 6, 1, "", "grad"], [4, 6, 1, "", "hess"], [4, 6, 1, "", "maxcv"], [4, 6, 1, "", "niter"], [4, 6, 1, "", "success"], [4, 6, 1, "", "x"]], "msca.optim.solver.ipsolver.IPSolver": [[4, 2, 1, "", "get_kkt"], [4, 2, 1, "", "minimize"]], "msca.optim.solver.ntsolver": [[4, 1, 1, "", "NTResult"], [4, 1, 1, "", "NTSolver"]], "msca.optim.solver.ntsolver.NTResult": [[4, 6, 1, "", "fun"], [4, 6, 1, "", "grad"], [4, 6, 1, "", "hess"], [4, 6, 1, "", "niter"], [4, 6, 1, "", "success"], [4, 6, 1, "", "x"]], "msca.optim.solver.ntsolver.NTSolver": [[4, 2, 1, "", "minimize"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:data", "5": "py:function", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "data", "Python data"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": 0, "refer": [0, 5], "msca": [1, 2, 3, 4, 5, 6], "c2fun": 1, "linalg": 2, "matrix": 2, "optim": [3, 4], "prox": 3, "solver": 4, "thi": 5, "i": 5, "packag": 5, "user": 5, "": 5, "guid": 5, "interfac": 5, "instal": 6, "python": 6, "version": 6, "For": 6, "develop": 6}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "msca.c2fun": [[1, "module-msca.c2fun.main"]], "msca.linalg": [[2, "msca-linalg"]], "msca.linalg.matrix": [[2, "module-msca.linalg.matrix"]], "msca.optim.prox": [[3, "msca-optim-prox"]], "msca.optim.solver": [[4, "module-msca.optim.solver.ipsolver"]], "This is a msca package": [[5, "this-is-a-msca-package"]], "User\u2019s guide": [[5, "user-s-guide"]], "Interface reference": [[5, "interface-reference"]], "Installing msca": [[6, "installing-msca"]], "Python version": [[6, "python-version"]], "Install msca": [[6, "install-msca"]], "For developers": [[6, "for-developers"]]}, "indexentries": {"c2fun (class in msca.c2fun.main)": [[1, "msca.c2fun.main.C2Fun"]], "exp (class in msca.c2fun.main)": [[1, "msca.c2fun.main.Exp"]], "expit (class in msca.c2fun.main)": [[1, "msca.c2fun.main.Expit"]], "identity (class in msca.c2fun.main)": [[1, "msca.c2fun.main.Identity"]], "log (class in msca.c2fun.main)": [[1, "msca.c2fun.main.Log"]], "logerfc (class in msca.c2fun.main)": [[1, "msca.c2fun.main.Logerfc"]], "logit (class in msca.c2fun.main)": [[1, "msca.c2fun.main.Logit"]], "__call__() (msca.c2fun.main.c2fun method)": [[1, "msca.c2fun.main.C2Fun.__call__"]], "c2fun_dict (in module msca.c2fun.main)": [[1, "msca.c2fun.main.c2fun_dict"]], "d2fun() (msca.c2fun.main.c2fun static method)": [[1, "msca.c2fun.main.C2Fun.d2fun"]], "d2fun() (msca.c2fun.main.exp static method)": [[1, "msca.c2fun.main.Exp.d2fun"]], "d2fun() (msca.c2fun.main.expit static method)": [[1, "msca.c2fun.main.Expit.d2fun"]], "d2fun() (msca.c2fun.main.identity static method)": [[1, "msca.c2fun.main.Identity.d2fun"]], "d2fun() (msca.c2fun.main.log static method)": [[1, "msca.c2fun.main.Log.d2fun"]], "d2fun() (msca.c2fun.main.logerfc static method)": [[1, "msca.c2fun.main.Logerfc.d2fun"]], "d2fun() (msca.c2fun.main.logit static method)": [[1, "msca.c2fun.main.Logit.d2fun"]], "dfun() (msca.c2fun.main.c2fun static method)": [[1, "msca.c2fun.main.C2Fun.dfun"]], "dfun() (msca.c2fun.main.exp static method)": [[1, "msca.c2fun.main.Exp.dfun"]], "dfun() (msca.c2fun.main.expit static method)": [[1, "msca.c2fun.main.Expit.dfun"]], "dfun() (msca.c2fun.main.identity static method)": [[1, "msca.c2fun.main.Identity.dfun"]], "dfun() (msca.c2fun.main.log static method)": [[1, "msca.c2fun.main.Log.dfun"]], "dfun() (msca.c2fun.main.logerfc static method)": [[1, "msca.c2fun.main.Logerfc.dfun"]], "dfun() (msca.c2fun.main.logit static method)": [[1, "msca.c2fun.main.Logit.dfun"]], "fun() (msca.c2fun.main.c2fun static method)": [[1, "msca.c2fun.main.C2Fun.fun"]], "fun() (msca.c2fun.main.exp static method)": [[1, "msca.c2fun.main.Exp.fun"]], "fun() (msca.c2fun.main.expit static method)": [[1, "msca.c2fun.main.Expit.fun"]], "fun() (msca.c2fun.main.identity static method)": [[1, "msca.c2fun.main.Identity.fun"]], "fun() (msca.c2fun.main.log static method)": [[1, "msca.c2fun.main.Log.fun"]], "fun() (msca.c2fun.main.logerfc static method)": [[1, "msca.c2fun.main.Logerfc.fun"]], "fun() (msca.c2fun.main.logit static method)": [[1, "msca.c2fun.main.Logit.fun"]], "inv (msca.c2fun.main.c2fun property)": [[1, "msca.c2fun.main.C2Fun.inv"]], "inv (msca.c2fun.main.exp property)": [[1, "msca.c2fun.main.Exp.inv"]], "inv (msca.c2fun.main.expit property)": [[1, "msca.c2fun.main.Expit.inv"]], "inv (msca.c2fun.main.identity property)": [[1, "msca.c2fun.main.Identity.inv"]], "inv (msca.c2fun.main.log property)": [[1, "msca.c2fun.main.Log.inv"]], "inv (msca.c2fun.main.logerfc property)": [[1, "msca.c2fun.main.Logerfc.inv"]], "inv (msca.c2fun.main.logit property)": [[1, "msca.c2fun.main.Logit.inv"]], "module": [[1, "module-msca.c2fun.main"], [2, "module-msca.linalg.matrix"], [4, "module-msca.optim.solver.ipsolver"], [4, "module-msca.optim.solver.ntsolver"]], "msca.c2fun.main": [[1, "module-msca.c2fun.main"]], "cscmatrix (class in msca.linalg.matrix)": [[2, "msca.linalg.matrix.CSCMatrix"]], "csrmatrix (class in msca.linalg.matrix)": [[2, "msca.linalg.matrix.CSRMatrix"]], "matrix (class in msca.linalg.matrix)": [[2, "msca.linalg.matrix.Matrix"]], "numpymatrix (class in msca.linalg.matrix)": [[2, "msca.linalg.matrix.NumpyMatrix"]], "t (msca.linalg.matrix.cscmatrix property)": [[2, "msca.linalg.matrix.CSCMatrix.T"]], "t (msca.linalg.matrix.csrmatrix property)": [[2, "msca.linalg.matrix.CSRMatrix.T"]], "asmatrix() (in module msca.linalg.matrix)": [[2, "msca.linalg.matrix.asmatrix"]], "dot() (msca.linalg.matrix.cscmatrix method)": [[2, "msca.linalg.matrix.CSCMatrix.dot"]], "dot() (msca.linalg.matrix.csrmatrix method)": [[2, "msca.linalg.matrix.CSRMatrix.dot"]], "dot() (msca.linalg.matrix.numpymatrix method)": [[2, "msca.linalg.matrix.NumpyMatrix.dot"]], "matrix_class_dict (in module msca.linalg.matrix)": [[2, "msca.linalg.matrix.matrix_class_dict"]], "matrix_classes (in module msca.linalg.matrix)": [[2, "msca.linalg.matrix.matrix_classes"]], "msca.linalg.matrix": [[2, "module-msca.linalg.matrix"]], "scale_cols() (msca.linalg.matrix.cscmatrix method)": [[2, "msca.linalg.matrix.CSCMatrix.scale_cols"]], "scale_cols() (msca.linalg.matrix.csrmatrix method)": [[2, "msca.linalg.matrix.CSRMatrix.scale_cols"]], "scale_cols() (msca.linalg.matrix.matrix method)": [[2, "msca.linalg.matrix.Matrix.scale_cols"]], "scale_cols() (msca.linalg.matrix.numpymatrix method)": [[2, "msca.linalg.matrix.NumpyMatrix.scale_cols"]], "scale_rows() (msca.linalg.matrix.cscmatrix method)": [[2, "msca.linalg.matrix.CSCMatrix.scale_rows"]], "scale_rows() (msca.linalg.matrix.csrmatrix method)": [[2, "msca.linalg.matrix.CSRMatrix.scale_rows"]], "scale_rows() (msca.linalg.matrix.matrix method)": [[2, "msca.linalg.matrix.Matrix.scale_rows"]], "scale_rows() (msca.linalg.matrix.numpymatrix method)": [[2, "msca.linalg.matrix.NumpyMatrix.scale_rows"]], "solve() (msca.linalg.matrix.cscmatrix method)": [[2, "msca.linalg.matrix.CSCMatrix.solve"]], "solve() (msca.linalg.matrix.csrmatrix method)": [[2, "msca.linalg.matrix.CSRMatrix.solve"]], "solve() (msca.linalg.matrix.matrix method)": [[2, "msca.linalg.matrix.Matrix.solve"]], "solve() (msca.linalg.matrix.numpymatrix method)": [[2, "msca.linalg.matrix.NumpyMatrix.solve"]], "to_numpy() (msca.linalg.matrix.cscmatrix method)": [[2, "msca.linalg.matrix.CSCMatrix.to_numpy"]], "to_numpy() (msca.linalg.matrix.csrmatrix method)": [[2, "msca.linalg.matrix.CSRMatrix.to_numpy"]], "to_numpy() (msca.linalg.matrix.matrix method)": [[2, "msca.linalg.matrix.Matrix.to_numpy"]], "to_numpy() (msca.linalg.matrix.numpymatrix method)": [[2, "msca.linalg.matrix.NumpyMatrix.to_numpy"]], "proj_capped_simplex() (in module msca.optim.prox)": [[3, "msca.optim.prox.proj_capped_simplex"]], "ipresult (class in msca.optim.solver.ipsolver)": [[4, "msca.optim.solver.ipsolver.IPResult"]], "ipsolver (class in msca.optim.solver.ipsolver)": [[4, "msca.optim.solver.ipsolver.IPSolver"]], "ntresult (class in msca.optim.solver.ntsolver)": [[4, "msca.optim.solver.ntsolver.NTResult"]], "ntsolver (class in msca.optim.solver.ntsolver)": [[4, "msca.optim.solver.ntsolver.NTSolver"]], "fun (msca.optim.solver.ipsolver.ipresult attribute)": [[4, "msca.optim.solver.ipsolver.IPResult.fun"]], "fun (msca.optim.solver.ntsolver.ntresult attribute)": [[4, "msca.optim.solver.ntsolver.NTResult.fun"]], "get_kkt() (msca.optim.solver.ipsolver.ipsolver method)": [[4, "msca.optim.solver.ipsolver.IPSolver.get_kkt"]], "grad (msca.optim.solver.ipsolver.ipresult attribute)": [[4, "msca.optim.solver.ipsolver.IPResult.grad"]], "grad (msca.optim.solver.ntsolver.ntresult attribute)": [[4, "msca.optim.solver.ntsolver.NTResult.grad"]], "hess (msca.optim.solver.ipsolver.ipresult attribute)": [[4, "msca.optim.solver.ipsolver.IPResult.hess"]], "hess (msca.optim.solver.ntsolver.ntresult attribute)": [[4, "msca.optim.solver.ntsolver.NTResult.hess"]], "maxcv (msca.optim.solver.ipsolver.ipresult attribute)": [[4, "msca.optim.solver.ipsolver.IPResult.maxcv"]], "minimize() (msca.optim.solver.ipsolver.ipsolver method)": [[4, "msca.optim.solver.ipsolver.IPSolver.minimize"]], "minimize() (msca.optim.solver.ntsolver.ntsolver method)": [[4, "msca.optim.solver.ntsolver.NTSolver.minimize"]], "msca.optim.solver.ipsolver": [[4, "module-msca.optim.solver.ipsolver"]], "msca.optim.solver.ntsolver": [[4, "module-msca.optim.solver.ntsolver"]], "niter (msca.optim.solver.ipsolver.ipresult attribute)": [[4, "msca.optim.solver.ipsolver.IPResult.niter"]], "niter (msca.optim.solver.ntsolver.ntresult attribute)": [[4, "msca.optim.solver.ntsolver.NTResult.niter"]], "success (msca.optim.solver.ipsolver.ipresult attribute)": [[4, "msca.optim.solver.ipsolver.IPResult.success"]], "success (msca.optim.solver.ntsolver.ntresult attribute)": [[4, "msca.optim.solver.ntsolver.NTResult.success"]], "x (msca.optim.solver.ipsolver.ipresult attribute)": [[4, "msca.optim.solver.ipsolver.IPResult.x"]], "x (msca.optim.solver.ntsolver.ntresult attribute)": [[4, "msca.optim.solver.ntsolver.NTResult.x"]]}})